//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfClient.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ICalculator")]
    public interface ICalculator {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/CompileExpression", ReplyAction="http://tempuri.org/ICalculator/CompileExpressionResponse")]
        string CompileExpression(string expression);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/CompileExpression", ReplyAction="http://tempuri.org/ICalculator/CompileExpressionResponse")]
        System.Threading.Tasks.Task<string> CompileExpressionAsync(string expression);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Set", ReplyAction="http://tempuri.org/ICalculator/SetResponse")]
        void Set(double a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Set", ReplyAction="http://tempuri.org/ICalculator/SetResponse")]
        System.Threading.Tasks.Task SetAsync(double a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Add", ReplyAction="http://tempuri.org/ICalculator/AddResponse")]
        void Add(double a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Add", ReplyAction="http://tempuri.org/ICalculator/AddResponse")]
        System.Threading.Tasks.Task AddAsync(double a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Multiply", ReplyAction="http://tempuri.org/ICalculator/MultiplyResponse")]
        void Multiply(double a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Multiply", ReplyAction="http://tempuri.org/ICalculator/MultiplyResponse")]
        System.Threading.Tasks.Task MultiplyAsync(double a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Substract", ReplyAction="http://tempuri.org/ICalculator/SubstractResponse")]
        void Substract(double a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Substract", ReplyAction="http://tempuri.org/ICalculator/SubstractResponse")]
        System.Threading.Tasks.Task SubstractAsync(double a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Divide", ReplyAction="http://tempuri.org/ICalculator/DivideResponse")]
        void Divide(double a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Divide", ReplyAction="http://tempuri.org/ICalculator/DivideResponse")]
        System.Threading.Tasks.Task DivideAsync(double a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Reset", ReplyAction="http://tempuri.org/ICalculator/ResetResponse")]
        void Reset();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Reset", ReplyAction="http://tempuri.org/ICalculator/ResetResponse")]
        System.Threading.Tasks.Task ResetAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Result", ReplyAction="http://tempuri.org/ICalculator/ResultResponse")]
        double Result();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Result", ReplyAction="http://tempuri.org/ICalculator/ResultResponse")]
        System.Threading.Tasks.Task<double> ResultAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalculatorChannel : WcfClient.ServiceReference1.ICalculator, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculatorClient : System.ServiceModel.ClientBase<WcfClient.ServiceReference1.ICalculator>, WcfClient.ServiceReference1.ICalculator {
        
        public CalculatorClient() {
        }
        
        public CalculatorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalculatorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string CompileExpression(string expression) {
            return base.Channel.CompileExpression(expression);
        }
        
        public System.Threading.Tasks.Task<string> CompileExpressionAsync(string expression) {
            return base.Channel.CompileExpressionAsync(expression);
        }
        
        public void Set(double a) {
            base.Channel.Set(a);
        }
        
        public System.Threading.Tasks.Task SetAsync(double a) {
            return base.Channel.SetAsync(a);
        }
        
        public void Add(double a) {
            base.Channel.Add(a);
        }
        
        public System.Threading.Tasks.Task AddAsync(double a) {
            return base.Channel.AddAsync(a);
        }
        
        public void Multiply(double a) {
            base.Channel.Multiply(a);
        }
        
        public System.Threading.Tasks.Task MultiplyAsync(double a) {
            return base.Channel.MultiplyAsync(a);
        }
        
        public void Substract(double a) {
            base.Channel.Substract(a);
        }
        
        public System.Threading.Tasks.Task SubstractAsync(double a) {
            return base.Channel.SubstractAsync(a);
        }
        
        public void Divide(double a) {
            base.Channel.Divide(a);
        }
        
        public System.Threading.Tasks.Task DivideAsync(double a) {
            return base.Channel.DivideAsync(a);
        }
        
        public void Reset() {
            base.Channel.Reset();
        }
        
        public System.Threading.Tasks.Task ResetAsync() {
            return base.Channel.ResetAsync();
        }
        
        public double Result() {
            return base.Channel.Result();
        }
        
        public System.Threading.Tasks.Task<double> ResultAsync() {
            return base.Channel.ResultAsync();
        }
    }
}
